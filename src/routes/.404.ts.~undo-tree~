(undo-tree-save-format-version . 1)
"b4c7860f37c12abf8b6790107346e640b73b958f"
[nil nil nil nil (26658 57432 102924 978000) 0 nil]
([nil nil ((316 . 324) (315 . 317) (#("\"" 0 1 (fontified nil)) . -315) (315 . 316) (303 . 316) (t 26658 51559 619680 195000)) nil (26658 57432 102923 518000) 0 nil])
([nil nil ((324 . 332)) nil (26658 57432 102922 328000) 0 nil])
([nil nil ((334 . 335)) nil (26658 57432 102921 598000) 0 nil])
([nil nil ((335 . 336)) nil (26658 57432 102917 818000) 0 nil])
([nil nil ((#("console.log(\"added null route\");" 0 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (fontified t) 8 11 (face font-lock-function-call-face fontified t) 11 12 (fontified t) 12 30 (face font-lock-string-face fontified t) 30 32 (fontified t)) . 303) (undo-tree-id9 . -8) (undo-tree-id10 . -11) (undo-tree-id11 . -32) (undo-tree-id12 . -32) (undo-tree-id13 . -32) (t 26658 57432 107539 93000)) nil (26658 57435 914666 679000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -302) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 303) nil (26658 57435 914659 159000) 0 nil])
([nil nil ((#("    loadTemplate(\"404\").then((elements) => { this.addElements(...elements) });" 0 4 (font-lock-multiline t fontified t) 4 16 (face font-lock-function-call-face font-lock-multiline t fontified t) 16 17 (font-lock-multiline t fontified t) 17 22 (font-lock-multiline t face font-lock-string-face fontified t) 22 24 (font-lock-multiline t fontified t) 24 28 (face font-lock-function-call-face font-lock-multiline t fontified t) 28 30 (font-lock-multiline t fontified t) 30 38 (face font-lock-variable-name-face font-lock-multiline t fontified t) 38 40 (font-lock-multiline t fontified t) 40 42 (face font-lock-keyword-face font-lock-multiline t fontified t) 42 45 (font-lock-multiline t fontified t) 45 49 (font-lock-multiline t face typescript-this-face fontified t) 49 50 (font-lock-multiline t fontified t) 50 61 (face font-lock-function-call-face font-lock-multiline t fontified t) 61 65 (font-lock-multiline t fontified t) 65 73 (face font-lock-variable-name-face font-lock-multiline t fontified t) 73 78 (font-lock-multiline t fontified t)) . 163) (undo-tree-id24 . -37) (undo-tree-id25 . -37) (undo-tree-id26 . -37) (undo-tree-id27 . -37) (undo-tree-id28 . -37) (undo-tree-id29 . -37) (undo-tree-id30 . -78) (t 26658 57435 914194 220000)) nil (26658 57538 171073 30000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-multiline t fontified t)) . -162) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 163) nil (26658 57538 171070 510000) 0 nil])
([nil nil ((168 . 170) (#("  " 0 2 (font-lock-multiline t fontified nil)) . 167) (undo-tree-id14 . -2) (166 . 170)) nil (26658 57538 171067 160000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -189) (189 . 190) (#("}" 0 1 (font-lock-multiline t fontified nil)) . -189) (189 . 190) (187 . 190) (#(")" 0 1 (fontified nil)) . -186) (186 . 187) (#(")" 0 1 (font-lock-multiline t fontified nil)) . -186) (186 . 187) (170 . 187)) nil (26658 57538 171057 260000) 0 nil])
([nil nil ((190 . 194) (191 . 193) (#("    " 0 4 (font-lock-multiline t fontified nil)) . 190) (190 . 194) (189 . 191)) nil (26658 57538 171056 570000) 0 nil])
([nil nil ((nil rear-nonsticky nil 267 . 268) (nil fontified nil 263 . 268) (nil fontified nil 255 . 263) (nil fontified nil 251 . 255) (nil fontified nil 240 . 251) (nil fontified nil 239 . 240) (nil fontified nil 235 . 239) (nil fontified nil 232 . 235) (nil fontified nil 230 . 232) (nil fontified nil 228 . 230) (nil fontified nil 220 . 228) (nil fontified nil 218 . 220) (nil fontified nil 214 . 218) (nil fontified nil 212 . 214) (nil fontified nil 207 . 212) (nil fontified nil 206 . 207) (nil fontified nil 194 . 206) (nil fontified nil 190 . 194) (190 . 268)) nil (26658 57538 171055 900000) 0 nil])
([nil nil ((#("    " 0 4 (font-lock-multiline t fontified t)) . 268)) nil (26658 57538 171051 570000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-multiline t fontified t)) . -264) (undo-tree-id231 . -1) (#("}" 0 1 (font-lock-multiline t fontified t)) . -265) (undo-tree-id232 . -1) (#(")" 0 1 (font-lock-multiline t fontified t)) . -266) (undo-tree-id233 . -1) 267 (t 26658 57538 170551 485000)) nil (26658 57566 624824 842000) 0 nil])
([nil nil ((#(" class NotFoundPage extends Page {
  constructor() {
    super();
  }

  async buildPage() {
    loadTemplate(\"404\").then((elements) => { this.addElements(...elements);
  }
}" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 19 (face font-lock-type-face fontified t) 19 20 (fontified t) 20 27 (face typescript-access-modifier-face fontified t) 27 28 (fontified t) 28 32 (face font-lock-type-face fontified t) 32 33 (fontified t) 33 37 (fontified t) 37 48 (face font-lock-keyword-face fontified t) 48 51 (fontified t) 51 57 (font-lock-multiline t fontified t) 57 62 (font-lock-multiline t face font-lock-keyword-face fontified t) 62 65 (font-lock-multiline t fontified t) 65 69 (font-lock-multiline t fontified t) 69 71 (fontified t) 71 73 (fontified t) 73 78 (face font-lock-keyword-face fontified t) 78 79 (fontified t) 79 88 (face font-lock-function-name-face fontified t) 88 89 (fontified t) 89 91 (fontified t) 91 93 (fontified t) 93 97 (fontified t) 97 109 (face font-lock-function-call-face fontified t) 109 110 (fontified t) 110 115 (face font-lock-string-face fontified t) 115 117 (fontified t) 117 121 (face font-lock-function-call-face fontified t) 121 123 (fontified t) 123 131 (face font-lock-variable-name-face fontified t) 131 133 (fontified t) 133 135 (face font-lock-keyword-face fontified t) 135 136 (fontified t) 136 138 (font-lock-multiline t fontified t) 138 142 (font-lock-multiline t face typescript-this-face fontified t) 142 143 (font-lock-multiline t fontified t) 143 154 (face font-lock-function-call-face font-lock-multiline t fontified t) 154 158 (font-lock-multiline t fontified t) 158 166 (face font-lock-variable-name-face font-lock-multiline t fontified t) 166 167 (font-lock-multiline t fontified t) 167 168 (font-lock-multiline t rear-nonsticky t fontified t) 168 171 (font-lock-multiline t fontified t) 171 172 (font-lock-multiline t fontified t) 172 173 (fontified t) 173 174 (fontified t)) . -97) (undo-tree-id214 . -93) (undo-tree-id215 . -174) (undo-tree-id216 . -65) (undo-tree-id217 . -65) (undo-tree-id218 . -174) (undo-tree-id219 . -174) (undo-tree-id220 . -93) (undo-tree-id221 . -172) (undo-tree-id222 . -172) (undo-tree-id223 . -172) (undo-tree-id224 . -172) (undo-tree-id225 . -172) (undo-tree-id226 . -172) (undo-tree-id227 . -172) (undo-tree-id228 . -173) (undo-tree-id229 . -174) (undo-tree-id230 . -174) 271) nil (26658 57566 624822 512000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -89) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("
" 0 1 (fontified t)) . -90) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("e" 0 1 (fontified t)) . -91) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("x" 0 1 (fontified t)) . -92) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("p" 0 1 (fontified t)) . -93) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("o" 0 1 (fontified t)) . -94) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("r" 0 1 (fontified t)) . -95) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -96) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) 97) nil (26658 57566 624807 242000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -54) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) 55 (t 26658 57566 623798 910000)) nil (26658 57571 670388 986000) 0 nil])
([nil nil ((#("Page" 0 4 (fontified t)) . -64) (undo-tree-id234 . -4) 68) nil (26658 57573 129900 614000) 0 nil])
([nil nil ((64 . 72)) nil (26658 57587 519413 311000) 0 nil] [nil nil ((64 . 72)) ((#("template" 0 8 (fontified t)) . 64) (undo-tree-id240 . -8) (undo-tree-id241 . -8) (undo-tree-id242 . -8) (undo-tree-id243 . -8) (undo-tree-id244 . -8) (undo-tree-id245 . -8) (undo-tree-id246 . -8) (t 26658 57571 670450 346000)) (26658 57571 670370 296000) 0 nil])
([nil nil ((#("router" 0 6 (face font-lock-string-face fontified t)) . -84) (undo-tree-id251 . -6) 90) nil (26658 57587 519412 941000) 0 nil])
nil
([nil nil ((84 . 87)) nil (26658 57587 519411 941000) 0 nil])
([nil nil ((84 . 94) (#("com" 0 3 (face font-lock-string-face fontified t)) . -84) (undo-tree-id249 . -3) (undo-tree-id250 . -3) 87) nil (26658 57587 519411 631000) 0 nil])
([nil nil ((#("components" 0 10 (face font-lock-string-face fontified t)) . -84) (undo-tree-id247 . -10) (undo-tree-id248 . -10) 94) nil (26658 57587 519409 921000) 0 nil])
([nil nil ((84 . 90)) nil (26658 57587 519401 171000) 0 nil])
([nil nil ((90 . 98)) nil (26658 57587 519397 591000) 0 nil])
([nil nil ((#("template" 0 8 (fontified t)) . -64) (undo-tree-id257 . -8) 72 (t 26658 57587 517069 204000)) nil (26658 57598 934613 627000) 0 nil])
([nil nil ((64 . 72)) nil (26658 57598 934612 847000) 0 nil])
([nil nil ((64 . 76) (#("Template" 0 8 (fontified t)) . -64) (undo-tree-id255 . -8) (undo-tree-id256 . -8) 72) nil (26658 57598 934612 357000) 0 nil])
([nil nil ((#("NotFoundPage" 0 12 (face font-lock-type-face fontified t)) . -143) (undo-tree-id254 . -12) 155) nil (26658 57598 934610 207000) 0 nil])
([nil nil ((143 . 155)) nil (26658 57598 934608 967000) 0 nil])
([nil nil ((157 . 161) (156 . 158) (#("\"" 0 1 (fontified nil)) . -156) (156 . 157)) nil (26658 57598 934608 267000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -160) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 161) nil (26658 57598 934607 177000) 0 nil])
([nil nil ((160 . 165)) nil (26658 57598 934592 807000) 0 nil])
([nil nil ((#("html" 0 4 (face font-lock-string-face fontified t)) . -161) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) 165 (t 26658 57598 933701 440000)) nil (26658 57621 395092 750000) 0 nil])
([nil current ((#("." 0 1 (face font-lock-string-face fontified t)) . -160) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 161) nil (26658 57621 395082 220000) 0 nil])
nil
